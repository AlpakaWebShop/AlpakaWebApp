name: .NET and MySQL CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:

    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_PASSWORD: rootpassword
          MYSQL_USER: user
          MYSQL_DATABASE: addresses
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5
        # Docker exposes MySQL through TCP. We need to wait for it to be ready before continuing with the job.
        # `mysqladmin ping` checks if the MySQL server is ready to accept connections. We retry this check 5 times, with a 10-second interval between checks.
        # If you have a different initialization script, you might need to adjust the health checks accordingly.

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x

      - name: Restore dependencies
        run: dotnet restore UserManagement/UserManagement.csproj

      - name: Apply migration.sql to MySQL
        run: |
          sudo apt-get install -y mysql-client
          mysql -h127.0.0.1 -P3306 -uroot -prootpassword addresses < UserManagement/CreateDatabase.sql

      - name: Build
        run: dotnet build --no-restore UserManagement/UserManagement.csproj

      - name: Test
        run: dotnet test --no-build --verbosity normal UserManagement/UserManagement.csproj
